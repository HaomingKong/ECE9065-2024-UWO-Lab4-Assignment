{"ast":null,"code":"import axios from 'axios';\nimport { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL, PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL, PRODUCT_DELETE_REQUEST, PRODUCT_DELETE_SUCCESS, PRODUCT_DELETE_FAIL, PRODUCT_CREATE_REQUEST, PRODUCT_CREATE_SUCCESS, PRODUCT_CREATE_FAIL, PRODUCT_UPDATE_REQUEST, PRODUCT_UPDATE_SUCCESS, PRODUCT_UPDATE_FAIL, PRODUCT_CREATE_REVIEW_REQUEST, PRODUCT_CREATE_REVIEW_SUCCESS, PRODUCT_CREATE_REVIEW_FAIL, PRODUCT_TOP_REQUEST, PRODUCT_TOP_SUCCESS, PRODUCT_TOP_FAIL } from '../constants/productConstants';\nexport const listProducts = (keyword = '', category = '', pageNumber = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); // 根据是否存在关键词和类别构造请求 URL\n\n    let url = `/api/products?pageNumber=${pageNumber}`;\n\n    if (keyword) {\n      url += `&keyword=${keyword}`;\n    }\n\n    if (category) {\n      url += `&category=${category}`;\n    }\n\n    const {\n      data\n    } = await axios.get(url);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listProductsByCategory = (category, pageNumber = '') => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    }); // Make request to get products by category\n\n    const {\n      data\n    } = await axios.get(`/api/products/category/${category}?pageNumber=${pageNumber}`);\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to get a single product\n\nexport const listProductDetails = id => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST\n    }); // Make request to get a single product\n\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to delete a single product\n\nexport const deleteProduct = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/products/${id}`, config);\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to create a single product\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/products', {}, config);\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to update a single product\n\nexport const updateProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/products/${product._id}`, product, config);\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to create a review on a single product\n\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n}; // Actions to get 3 top rated products\n\nexport const listTopProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_TOP_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products/top');\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["/Users/konghaoming/Desktop/react-complete-e-commerce-main/frontend/src/actions/productActions.js"],"names":["axios","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","listProducts","keyword","category","pageNumber","dispatch","type","url","data","get","payload","error","response","message","listProductsByCategory","listProductDetails","id","deleteProduct","getState","userLogin","userInfo","config","headers","Authorization","token","delete","createProduct","post","updateProduct","product","put","_id","createProductReview","productId","review","listTopProducts"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport {\n\tPRODUCT_LIST_REQUEST,\n\tPRODUCT_LIST_SUCCESS,\n\tPRODUCT_LIST_FAIL,\n\tPRODUCT_DETAILS_REQUEST,\n\tPRODUCT_DETAILS_SUCCESS,\n\tPRODUCT_DETAILS_FAIL,\n\tPRODUCT_DELETE_REQUEST,\n\tPRODUCT_DELETE_SUCCESS,\n\tPRODUCT_DELETE_FAIL,\n\tPRODUCT_CREATE_REQUEST,\n\tPRODUCT_CREATE_SUCCESS,\n\tPRODUCT_CREATE_FAIL,\n\tPRODUCT_UPDATE_REQUEST,\n\tPRODUCT_UPDATE_SUCCESS,\n\tPRODUCT_UPDATE_FAIL,\n\tPRODUCT_CREATE_REVIEW_REQUEST,\n\tPRODUCT_CREATE_REVIEW_SUCCESS,\n\tPRODUCT_CREATE_REVIEW_FAIL,\n\tPRODUCT_TOP_REQUEST,\n\tPRODUCT_TOP_SUCCESS,\n\tPRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\nexport const listProducts = (keyword = '', category = '', pageNumber = '') => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_LIST_REQUEST })\n\n\t\t// 根据是否存在关键词和类别构造请求 URL\n\t\tlet url = `/api/products?pageNumber=${pageNumber}`\n\t\tif (keyword) {\n\t\t\turl += `&keyword=${keyword}`\n\t\t}\n\t\tif (category) {\n\t\t\turl += `&category=${category}`\n\t\t}\n\n\t\tconst { data } = await axios.get(url)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\nexport const listProductsByCategory = (category, pageNumber = '') => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_LIST_REQUEST })\n\n\t\t// Make request to get products by category\n\t\tconst { data } = await axios.get(\n\t\t\t`/api/products/category/${category}?pageNumber=${pageNumber}`\n\t\t)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_LIST_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to get a single product\nexport const listProductDetails = (id) => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n\t\t// Make request to get a single product\n\t\tconst { data } = await axios.get(`/api/products/${id}`)\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_DETAILS_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_DETAILS_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to delete a single product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_DELETE_REQUEST })\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\n\t\tawait axios.delete(`/api/products/${id}`, config)\n\n\t\tdispatch({ type: PRODUCT_DELETE_SUCCESS })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_DELETE_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to create a single product\nexport const createProduct = () => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_CREATE_REQUEST })\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.post('/api/products', {}, config)\n\n\t\tdispatch({ type: PRODUCT_CREATE_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_CREATE_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to update a single product\nexport const updateProduct = (product) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_UPDATE_REQUEST })\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\n\t\tconst { data } = await axios.put(\n\t\t\t`/api/products/${product._id}`,\n\t\t\tproduct,\n\t\t\tconfig\n\t\t)\n\n\t\tdispatch({ type: PRODUCT_UPDATE_SUCCESS, payload: data })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_UPDATE_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to create a review on a single product\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST })\n\n\t\tconst {\n\t\t\tuserLogin: { userInfo },\n\t\t} = getState()\n\n\t\tconst config = {\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t\tAuthorization: `Bearer ${userInfo.token}`,\n\t\t\t},\n\t\t}\n\n\t\tawait axios.post(`/api/products/${productId}/reviews`, review, config)\n\n\t\tdispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS })\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_CREATE_REVIEW_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n\n// Actions to get 3 top rated products\nexport const listTopProducts = () => async (dispatch) => {\n\ttry {\n\t\tdispatch({ type: PRODUCT_TOP_REQUEST })\n\n\t\tconst { data } = await axios.get('/api/products/top')\n\n\t\tdispatch({\n\t\t\ttype: PRODUCT_TOP_SUCCESS,\n\t\t\tpayload: data,\n\t\t})\n\t} catch (error) {\n\t\tdispatch({\n\t\t\ttype: PRODUCT_TOP_FAIL,\n\t\t\tpayload:\n\t\t\t\terror.response && error.response.data.message\n\t\t\t\t\t? error.response.data.message\n\t\t\t\t\t: error.message,\n\t\t})\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}