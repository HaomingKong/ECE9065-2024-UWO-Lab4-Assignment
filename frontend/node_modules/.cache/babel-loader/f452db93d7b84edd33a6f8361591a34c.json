{"ast":null,"code":"import axios from 'axios';\nimport { CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_SHIPPING_ADDRESS, CART_SAVE_PAYMENT_METHOD } from '../constants/cartConstants'; // Actions to add a single product to the cart\n\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n  // Make request to get a single product\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty\n    }\n  }); // Set cart items to local storage\n\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}; // Actions to remove a single product from the cart\n\nexport const removeFromCart = id => async (dispatch, getState) => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\n}; // Actions to save shipping address\n\nexport const saveShippingAddress = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_SHIPPING_ADDRESS,\n    payload: data\n  });\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\n}; // Actions to save payment method\n\nexport const savePaymentMethod = data => async dispatch => {\n  dispatch({\n    type: CART_SAVE_PAYMENT_METHOD,\n    payload: data\n  });\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\n};","map":{"version":3,"sources":["/Users/konghaoming/Desktop/react-complete-e-commerce-main 2/frontend/src/actions/cartActions.js"],"names":["axios","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","addToCart","id","qty","dispatch","getState","data","get","type","payload","product","_id","name","image","price","countInStock","localStorage","setItem","JSON","stringify","cart","cartItems","removeFromCart","saveShippingAddress","savePaymentMethod"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACCC,aADD,EAECC,gBAFD,EAGCC,0BAHD,EAICC,wBAJD,QAKO,4BALP,C,CAMA;;AACA,OAAO,MAAMC,SAAS,GAAG,CAACC,EAAD,EAAKC,GAAL,KAAa,OAAOC,QAAP,EAAiBC,QAAjB,KAA8B;AACnE;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMV,KAAK,CAACW,GAAN,CAAW,iBAAgBL,EAAG,EAA9B,CAAvB;AAEAE,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAEX,aADE;AAERY,IAAAA,OAAO,EAAE;AACRC,MAAAA,OAAO,EAAEJ,IAAI,CAACK,GADN;AAERC,MAAAA,IAAI,EAAEN,IAAI,CAACM,IAFH;AAGRC,MAAAA,KAAK,EAAEP,IAAI,CAACO,KAHJ;AAIRC,MAAAA,KAAK,EAAER,IAAI,CAACQ,KAJJ;AAKRC,MAAAA,YAAY,EAAET,IAAI,CAACS,YALX;AAMRZ,MAAAA;AANQ;AAFD,GAAD,CAAR,CAJmE,CAenE;;AACAa,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACA,CAjBM,C,CAkBP;;AACA,OAAO,MAAMC,cAAc,GAAIpB,EAAD,IAAQ,OAAOE,QAAP,EAAiBC,QAAjB,KAA8B;AACnED,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAEV,gBADE;AAERW,IAAAA,OAAO,EAAEP;AAFD,GAAD,CAAR;AAIAc,EAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAACC,SAAL,CAAed,QAAQ,GAAGe,IAAX,CAAgBC,SAA/B,CAAlC;AACA,CANM,C,CAOP;;AACA,OAAO,MAAME,mBAAmB,GAAIjB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AAChEA,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAET,0BADE;AAERU,IAAAA,OAAO,EAAEH;AAFD,GAAD,CAAR;AAIAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,iBAArB,EAAwCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAxC;AACA,CANM,C,CAOP;;AACA,OAAO,MAAMkB,iBAAiB,GAAIlB,IAAD,IAAU,MAAOF,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AACRI,IAAAA,IAAI,EAAER,wBADE;AAERS,IAAAA,OAAO,EAAEH;AAFD,GAAD,CAAR;AAIAU,EAAAA,YAAY,CAACC,OAAb,CAAqB,eAArB,EAAsCC,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAtC;AACA,CANM","sourcesContent":["import axios from 'axios'\nimport {\n\tCART_ADD_ITEM,\n\tCART_REMOVE_ITEM,\n\tCART_SAVE_SHIPPING_ADDRESS,\n\tCART_SAVE_PAYMENT_METHOD,\n} from '../constants/cartConstants'\n// Actions to add a single product to the cart\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\n\t// Make request to get a single product\n\tconst { data } = await axios.get(`/api/products/${id}`)\n\n\tdispatch({\n\t\ttype: CART_ADD_ITEM,\n\t\tpayload: {\n\t\t\tproduct: data._id,\n\t\t\tname: data.name,\n\t\t\timage: data.image,\n\t\t\tprice: data.price,\n\t\t\tcountInStock: data.countInStock,\n\t\t\tqty,\n\t\t},\n\t})\n\t// Set cart items to local storage\n\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n// Actions to remove a single product from the cart\nexport const removeFromCart = (id) => async (dispatch, getState) => {\n\tdispatch({\n\t\ttype: CART_REMOVE_ITEM,\n\t\tpayload: id,\n\t})\n\tlocalStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\n}\n// Actions to save shipping address\nexport const saveShippingAddress = (data) => async (dispatch) => {\n\tdispatch({\n\t\ttype: CART_SAVE_SHIPPING_ADDRESS,\n\t\tpayload: data,\n\t})\n\tlocalStorage.setItem('shippingAddress', JSON.stringify(data))\n}\n// Actions to save payment method\nexport const savePaymentMethod = (data) => async (dispatch) => {\n\tdispatch({\n\t\ttype: CART_SAVE_PAYMENT_METHOD,\n\t\tpayload: data,\n\t})\n\tlocalStorage.setItem('paymentMethod', JSON.stringify(data))\n}\n"]},"metadata":{},"sourceType":"module"}